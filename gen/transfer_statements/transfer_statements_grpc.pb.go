// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: transfer_statements/transfer_statements.proto

package transfer_statements

import (
	context "context"
	common "github.com/lyfeyvutha/grpcATCbank/gen/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	TransferStatements_CreateStatement_FullMethodName = "/transfer_statements.TransferStatements/CreateStatement"
)

// TransferStatementsClient is the client API for TransferStatements service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TransferStatementsClient interface {
	CreateStatement(ctx context.Context, opts ...grpc.CallOption) (TransferStatements_CreateStatementClient, error)
}

type transferStatementsClient struct {
	cc grpc.ClientConnInterface
}

func NewTransferStatementsClient(cc grpc.ClientConnInterface) TransferStatementsClient {
	return &transferStatementsClient{cc}
}

func (c *transferStatementsClient) CreateStatement(ctx context.Context, opts ...grpc.CallOption) (TransferStatements_CreateStatementClient, error) {
	stream, err := c.cc.NewStream(ctx, &TransferStatements_ServiceDesc.Streams[0], TransferStatements_CreateStatement_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &transferStatementsCreateStatementClient{stream}
	return x, nil
}

type TransferStatements_CreateStatementClient interface {
	Send(*common.Transfer) error
	CloseAndRecv() (*common.TransferStatement, error)
	grpc.ClientStream
}

type transferStatementsCreateStatementClient struct {
	grpc.ClientStream
}

func (x *transferStatementsCreateStatementClient) Send(m *common.Transfer) error {
	return x.ClientStream.SendMsg(m)
}

func (x *transferStatementsCreateStatementClient) CloseAndRecv() (*common.TransferStatement, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(common.TransferStatement)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TransferStatementsServer is the server API for TransferStatements service.
// All implementations should embed UnimplementedTransferStatementsServer
// for forward compatibility
type TransferStatementsServer interface {
	CreateStatement(TransferStatements_CreateStatementServer) error
}

// UnimplementedTransferStatementsServer should be embedded to have forward compatible implementations.
type UnimplementedTransferStatementsServer struct {
}

func (UnimplementedTransferStatementsServer) CreateStatement(TransferStatements_CreateStatementServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateStatement not implemented")
}

// UnsafeTransferStatementsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TransferStatementsServer will
// result in compilation errors.
type UnsafeTransferStatementsServer interface {
	mustEmbedUnimplementedTransferStatementsServer()
}

func RegisterTransferStatementsServer(s grpc.ServiceRegistrar, srv TransferStatementsServer) {
	s.RegisterService(&TransferStatements_ServiceDesc, srv)
}

func _TransferStatements_CreateStatement_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TransferStatementsServer).CreateStatement(&transferStatementsCreateStatementServer{stream})
}

type TransferStatements_CreateStatementServer interface {
	SendAndClose(*common.TransferStatement) error
	Recv() (*common.Transfer, error)
	grpc.ServerStream
}

type transferStatementsCreateStatementServer struct {
	grpc.ServerStream
}

func (x *transferStatementsCreateStatementServer) SendAndClose(m *common.TransferStatement) error {
	return x.ServerStream.SendMsg(m)
}

func (x *transferStatementsCreateStatementServer) Recv() (*common.Transfer, error) {
	m := new(common.Transfer)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TransferStatements_ServiceDesc is the grpc.ServiceDesc for TransferStatements service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TransferStatements_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "transfer_statements.TransferStatements",
	HandlerType: (*TransferStatementsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateStatement",
			Handler:       _TransferStatements_CreateStatement_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "transfer_statements/transfer_statements.proto",
}
